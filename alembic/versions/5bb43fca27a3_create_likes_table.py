"""create likes table

Revision ID: 5bb43fca27a3
Revises: 89a55f079fa2
Create Date: 2021-12-25 19:45:19.883398

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5bb43fca27a3'
down_revision = '89a55f079fa2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
#    op.create_table('users',
#    sa.Column('id', sa.Integer(), nullable=False),
#    sa.Column('email', sa.String(), nullable=False),
#    sa.Column('password', sa.String(), nullable=False),
#    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
#    sa.Column('deleted', sa.Boolean(), nullable=False),
#    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
#    sa.PrimaryKeyConstraint('id'),
#    sa.UniqueConstraint('email')
#    )
#    op.create_table('posts',
#    sa.Column('id', sa.Integer(), nullable=False),
#    sa.Column('title', sa.String(), nullable=False),
#    sa.Column('content', sa.String(), nullable=False),
#    sa.Column('published', sa.Boolean(), server_default='TRUE', nullable=False),
#    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
#    sa.Column('owner_id', sa.Integer(), nullable=False),
#    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
#    sa.PrimaryKeyConstraint('id')
#    )
    op.create_table('likes',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['Posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id', 'user_id')
    )
#    op.drop_table('Users')
#    op.drop_table('Posts')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
#    op.create_table('Posts',
#    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Posts_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
#    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
#    sa.Column('published', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
#    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
#    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
#    sa.ForeignKeyConstraint(['owner_id'], ['Users.id'], name='posts_users_fk', ondelete='CASCADE'),
#    sa.PrimaryKeyConstraint('id', name='Posts_pkey')
#    )
#    op.create_table('Users',
#    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Users_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
#    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
#    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
#    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
#    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
#    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
#    sa.PrimaryKeyConstraint('id', name='Users_pkey'),
#    sa.UniqueConstraint('email', name='Users_email_key')
#    )
    op.drop_table('likes')
#    op.drop_table('posts')
#    op.drop_table('users')
    # ### end Alembic commands ###
